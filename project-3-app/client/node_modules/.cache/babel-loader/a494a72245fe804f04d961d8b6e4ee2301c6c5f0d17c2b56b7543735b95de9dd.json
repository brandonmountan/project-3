{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\pages\\\\GameCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// import Card from \"react-bootstrap/Card\";\nimport \"../../styles/gameCard.css\";\n// import Image from \"react-bootstrap/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameCard({\n  game\n}) {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const filteredScreenshots = game.short_screenshots.filter(screenshot => screenshot.id !== -1);\n  const openImagePopup = image => {\n    setSelectedImage(image);\n    // timeout to let state change on display property so image click works properly\n    setTimeout(() => {\n      const popup = document.querySelector(\".image-popup\");\n      if (popup) {\n        popup.style.display = \"block\";\n      }\n    }, 0);\n  };\n\n  // close the image popup\n  const closeImagePopup = () => {\n    setSelectedImage(null);\n    // change display property back\n    const popup = document.querySelector(\".image-popup\");\n    if (popup) {\n      popup.style.display = \"none\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: '#3a506b'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      src: game.background_image,\n      alt: game.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" \", game.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Platforms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \", game.platforms.map(platform => platform.platform.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Metacritic Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \" \", game.metacritic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      className: \"card-footer\",\n      children: filteredScreenshots.map(screenshot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail-image\",\n        onClick: () => openImagePopup(screenshot.image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: screenshot.image,\n          alt: game.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, screenshot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-popup\",\n      onClick: closeImagePopup,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-button\",\n        onClick: closeImagePopup,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(GameCard, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = GameCard;\nGameCard.propTypes = {\n  game: PropTypes.object.isRequired\n};\nexport default GameCard;\nvar _c;\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","GameCard","game","_s","selectedImage","setSelectedImage","filteredScreenshots","short_screenshots","filter","screenshot","id","openImagePopup","image","setTimeout","popup","document","querySelector","style","display","closeImagePopup","Card","backgroundColor","children","Img","src","background_image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","Title","Text","released","platforms","map","platform","join","metacritic","Footer","onClick","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/pages/GameCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import Card from \"react-bootstrap/Card\";\r\nimport \"../../styles/gameCard.css\"\r\n// import Image from \"react-bootstrap/Image\";\r\n\r\nfunction GameCard({ game }) {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  \r\n  const filteredScreenshots = game.short_screenshots.filter(\r\n    (screenshot) => screenshot.id !== -1\r\n  );\r\n\r\n  const openImagePopup = (image) => {\r\n    setSelectedImage(image);\r\n    // timeout to let state change on display property so image click works properly\r\n    setTimeout(() => {\r\n      const popup = document.querySelector(\".image-popup\");\r\n      if (popup) {\r\n        popup.style.display = \"block\";\r\n      }\r\n    }, 0); \r\n  };\r\n  \r\n  // close the image popup\r\n  const closeImagePopup = () => {\r\n    setSelectedImage(null);\r\n    // change display property back\r\n    const popup = document.querySelector(\".image-popup\");\r\n    if (popup) {\r\n      popup.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#3a506b' }}>\r\n      <Card.Img src={game.background_image} alt={game.name} />\r\n      <Card.Body className=\"card-body\">\r\n        <Card.Title>{game.name}</Card.Title>\r\n        <Card.Text>\r\n          <strong>Release Date:</strong> {game.released}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Platforms:</strong>{\" \"}\r\n          {game.platforms.map((platform) => platform.platform.name).join(\", \")}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Metacritic Score:</strong> {game.metacritic}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer className=\"card-footer\">\r\n        {filteredScreenshots.map((screenshot) => (\r\n          <div\r\n            key={screenshot.id}\r\n            className=\"thumbnail-image\"\r\n            onClick={() => openImagePopup(screenshot.image)}\r\n          >\r\n            <img src={screenshot.image} alt={game.name} />\r\n          </div>\r\n        ))}\r\n      </Card.Footer>\r\n\r\n      {/* Image Popup */}\r\n      {selectedImage && (\r\n        <div className=\"image-popup\" onClick={closeImagePopup}>\r\n          <img src={selectedImage} alt={game.name} />\r\n          <div className=\"close-button\" onClick={closeImagePopup}>\r\n            &#x2715;\r\n          </div>\r\n        </div>\r\n        )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nGameCard.propTypes = {\r\n  game: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default GameCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}