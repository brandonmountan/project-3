{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Container from \"./components/Container\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nconst App = () => /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: [/*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this), \";\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 5\n}, this);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Container","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Container from \"./components/Container\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('id_token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\n\nconst App = () =>\n    <ApolloProvider client={client}>\n        <Container />;\n    </ApolloProvider>;\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACIC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,cAAc,QACX,gBAAgB;AACvB,SAASC,UAAU,QAAQ,6BAA6B;AAExD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC5BM,GAAG,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGN,UAAU,CAAC,CAACO,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,OAAO;IACHH,OAAO,EAAE;MACL,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC/C;EACJ,CAAC;AACL,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIjB,YAAY,CAAC;EAC5BkB,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAInB,aAAa,CAAC;AAC7B,CAAC,CAAC;AAGF,MAAMoB,GAAG,GAAGA,CAAA,kBACRd,OAAA,CAACL,cAAc;EAACe,MAAM,EAAEA,MAAO;EAAAK,QAAA,gBAC3Bf,OAAA,CAACF,SAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,KACjB;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAgB,CAAC;AAACC,EAAA,GAHhBN,GAAG;AAKT,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}