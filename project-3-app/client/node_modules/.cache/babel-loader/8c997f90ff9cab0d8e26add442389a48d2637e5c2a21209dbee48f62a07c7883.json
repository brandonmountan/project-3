{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport ProfilePost from './pages/Profile-Post';\nimport LoginSignup from './pages/Login-Signup';\nimport Profile from './pages/Profile';\nimport Footer from './Footer';\nimport Header from './Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'Profile') {\n      return /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    }\n    if (currentPage === 'About') {\n      return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'ProfilePost') {\n      return /*#__PURE__*/_jsxDEV(ProfilePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'LoginSignup') {\n      return /*#__PURE__*/_jsxDEV(LoginSignup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this);\n    }\n  };\n  const handlePageChange = page => setCurrentPage(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), renderPage(), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n\n// import Home from './pages/Home';\n// import Header from './components/Header';\n// // import Footer from './components/pages/Footer';\n// // import NavBar from './components/pages/NavBar';\n// // import Sidebar from './components/pages/Sidebar'\n// // import LoginSignup from './components/pages/Login-Signup';\n// // import About from './components/pages/About';\n// // import Profile from './components/pages/Profile';\n// // import ProfilePost from './components/pages/Profile-Post';\n// // import GamePage from './components/pages/GamePage';\n\n// const httpLink = createHttpLink({\n//   uri: '/graphql',\n// });\n\n// const authLink = setContext((_, { headers }) => {\n//   const token = localStorage.getItem('id_token');\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\n// function App() {\n//   return (\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <div>\n//             {/* <NavBar /> */}\n//             <Header />\n//             {/* <Footer />\n//             <Sidebar /> */}\n//             <Routes>\n//               <Route \n//                 path=\"/\" \n//                 element={<Home />} \n//               />\n//               {/* <Route \n//                 path=\"/LoginSignup\" \n//                 element={<LoginSignup />} \n//               />\n//               <Route \n//                 path=\"/profile\" \n//                 element={<Profile />} \n//               />\n//               <Route \n//                 path=\"/profilepost\" \n//                 element={<ProfilePost />} \n//               />\n//               <Route \n//                 path=\"/gamepage\" \n//                 element={<GamePage />} \n//               />\n//               <Route \n//                 path=\"/about\" \n//                 element={<About />}  */}\n//               {/* /> */}\n//             </Routes>\n//         </div>\n//       </Router>\n//     </ApolloProvider>\n//   );\n// }\n\n// export default App;\n_s(PortfolioContainer, \"vcoaMTDHSZfl5rAUZU9BPC9/EwA=\");\n_c = PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["React","useState","NavBar","Home","About","ProfilePost","LoginSignup","Profile","Footer","Header","jsxDEV","_jsxDEV","PortfolioContainer","_s","currentPage","setCurrentPage","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","page","children","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/Container.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NavBar from './NavBar';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport ProfilePost from './pages/Profile-Post';\nimport LoginSignup from './pages/Login-Signup';\nimport Profile from './pages/Profile';\nimport Footer from './Footer';\nimport Header from './Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home />;\n    }\n    if (currentPage === 'Profile') {\n        return <Profile />;\n      }\n    if (currentPage === 'About') {\n      return <About />;\n    }\n    if (currentPage === 'ProfilePost') {\n      return <ProfilePost />;\n    }\n    if (currentPage === 'LoginSignup') {\n        return <LoginSignup />;\n      }\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      <Header/>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavBar currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n      <Footer/>\n    </div>\n  );\n}\n\n\n\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n\n// import Home from './pages/Home';\n// import Header from './components/Header';\n// // import Footer from './components/pages/Footer';\n// // import NavBar from './components/pages/NavBar';\n// // import Sidebar from './components/pages/Sidebar'\n// // import LoginSignup from './components/pages/Login-Signup';\n// // import About from './components/pages/About';\n// // import Profile from './components/pages/Profile';\n// // import ProfilePost from './components/pages/Profile-Post';\n// // import GamePage from './components/pages/GamePage';\n\n\n// const httpLink = createHttpLink({\n//   uri: '/graphql',\n// });\n\n// const authLink = setContext((_, { headers }) => {\n//   const token = localStorage.getItem('id_token');\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\n// function App() {\n//   return (\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <div>\n//             {/* <NavBar /> */}\n//             <Header />\n//             {/* <Footer />\n//             <Sidebar /> */}\n//             <Routes>\n//               <Route \n//                 path=\"/\" \n//                 element={<Home />} \n//               />\n//               {/* <Route \n//                 path=\"/LoginSignup\" \n//                 element={<LoginSignup />} \n//               />\n//               <Route \n//                 path=\"/profile\" \n//                 element={<Profile />} \n//               />\n//               <Route \n//                 path=\"/profilepost\" \n//                 element={<ProfilePost />} \n//               />\n//               <Route \n//                 path=\"/gamepage\" \n//                 element={<GamePage />} \n//               />\n//               <Route \n//                 path=\"/about\" \n//                 element={<About />}  */}\n//               {/* /> */}\n//             </Routes>\n//         </div>\n//       </Router>\n//     </ApolloProvider>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}