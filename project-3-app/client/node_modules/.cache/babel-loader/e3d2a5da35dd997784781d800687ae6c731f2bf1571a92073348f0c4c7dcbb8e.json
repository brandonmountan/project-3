{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\pages\\\\GamePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Form from \"react-bootstrap/Form\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import \"../../styles/gamePage.css\";\n\n// function GameSearch() {\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch game suggestions when the search term changes\n//     async function fetchGameSuggestions() {\n//       try {\n//         if (searchTerm.trim() === \"\") {\n//           setSearchResults([]); // Clear results if the search term is empty\n//           return;\n//         }\n\n//         const response = await axios.get(\n//           \"https://api.rawg.io/api/games\",\n//           {\n//             params: {\n//               key: process.env.REACT_APP_RAWG_API_KEY,\n//               search: searchTerm,\n//               page_size: 10, // Limit the number of results\n//             },\n//           }\n//         );\n\n//         setSearchResults(response.data.results);\n//       } catch (error) {\n//         console.error(\"Error fetching game suggestions\", error);\n//       }\n//     }\n\n//     fetchGameSuggestions();\n//   }, [searchTerm]);\n\n//   const handleItemClick = (clickedItem) => {\n//     setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n//     setSearchResults([]); // Clear the dropdown\n//   };\n\n//   return (\n//     <div className=\"game-search\">\n//       <h2>Game Search</h2>\n//       <Form>\n//         <Form.Group controlId=\"searchTerm\">\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Search for a game\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </Form.Group>\n//       </Form>\n//       <ListGroup>\n//         {searchResults.map((game) => (\n//           <ListGroup.Item key={game.id}\n//           onClick={() => handleItemClick(game)}>\n//             {game.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// export default GameSearch;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"../../styles/gamePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameSearch() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const searchInputRef = useRef(null);\n  useEffect(() => {\n    // Fetch game suggestions when the search term changes\n    async function fetchGameSuggestions() {\n      try {\n        if (searchTerm.trim() === \"\") {\n          setSearchResults([]); // Clear results if the search term is empty\n          return;\n        }\n        const response = await axios.get(\"https://api.rawg.io/api/games\", {\n          params: {\n            key: process.env.REACT_APP_RAWG_API_KEY,\n            search: searchTerm,\n            page_size: 10 // Limit the number of results\n          }\n        });\n\n        setSearchResults(response.data.results);\n        setShowDropdown(true);\n      } catch (error) {\n        console.error(\"Error fetching game suggestions\", error);\n      }\n    }\n    fetchGameSuggestions();\n  }, [searchTerm]);\n  const handleItemClick = clickedItem => {\n    setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n    setSearchResults([]); // Clear the dropdown\n  };\n\n  const handleInputBlur = () => {\n    // Close the dropdown when the input field loses focus\n    setTimeout(() => {\n      setShowDropdown(false);\n    }, 200); // Add a small delay to allow clicking on the dropdown\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"searchTerm\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search for a game\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          onFocus: () => setShowDropdown(true),\n          onBlur: handleInputBlur,\n          ref: searchInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: searchResults.map(game => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          onClick: () => handleItemClick(game),\n          children: game.name\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(GameSearch, \"ZC9TT1G1IfJU2UOjGnNz4QxORJo=\");\n_c = GameSearch;\nexport default GameSearch;\nvar _c;\n$RefreshReg$(_c, \"GameSearch\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Form","ListGroup","jsxDEV","_jsxDEV","GameSearch","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","showDropdown","setShowDropdown","searchInputRef","fetchGameSuggestions","trim","response","get","params","key","process","env","REACT_APP_RAWG_API_KEY","search","page_size","data","results","error","console","handleItemClick","clickedItem","name","handleInputBlur","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","value","onChange","e","target","onFocus","onBlur","ref","map","game","Item","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/pages/GamePage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Form from \"react-bootstrap/Form\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import \"../../styles/gamePage.css\";\n\n// function GameSearch() {\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch game suggestions when the search term changes\n//     async function fetchGameSuggestions() {\n//       try {\n//         if (searchTerm.trim() === \"\") {\n//           setSearchResults([]); // Clear results if the search term is empty\n//           return;\n//         }\n\n//         const response = await axios.get(\n//           \"https://api.rawg.io/api/games\",\n//           {\n//             params: {\n//               key: process.env.REACT_APP_RAWG_API_KEY,\n//               search: searchTerm,\n//               page_size: 10, // Limit the number of results\n//             },\n//           }\n//         );\n\n//         setSearchResults(response.data.results);\n//       } catch (error) {\n//         console.error(\"Error fetching game suggestions\", error);\n//       }\n//     }\n\n//     fetchGameSuggestions();\n//   }, [searchTerm]);\n\n//   const handleItemClick = (clickedItem) => {\n//     setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n//     setSearchResults([]); // Clear the dropdown\n//   };\n\n//   return (\n//     <div className=\"game-search\">\n//       <h2>Game Search</h2>\n//       <Form>\n//         <Form.Group controlId=\"searchTerm\">\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Search for a game\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//           />\n//         </Form.Group>\n//       </Form>\n//       <ListGroup>\n//         {searchResults.map((game) => (\n//           <ListGroup.Item key={game.id}\n//           onClick={() => handleItemClick(game)}>\n//             {game.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// export default GameSearch;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"../../styles/gamePage.css\";\n\nfunction GameSearch() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const searchInputRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch game suggestions when the search term changes\n    async function fetchGameSuggestions() {\n      try {\n        if (searchTerm.trim() === \"\") {\n          setSearchResults([]); // Clear results if the search term is empty\n          return;\n        }\n\n        const response = await axios.get(\n          \"https://api.rawg.io/api/games\",\n          {\n            params: {\n              key: process.env.REACT_APP_RAWG_API_KEY,\n              search: searchTerm,\n              page_size: 10, // Limit the number of results\n            },\n          }\n        );\n\n        setSearchResults(response.data.results);\n        setShowDropdown(true);\n      } catch (error) {\n        console.error(\"Error fetching game suggestions\", error);\n      }\n    }\n\n    fetchGameSuggestions();\n  }, [searchTerm]);\n\n  const handleItemClick = (clickedItem) => {\n    setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n    setSearchResults([]); // Clear the dropdown\n  };\n\n  const handleInputBlur = () => {\n    // Close the dropdown when the input field loses focus\n    setTimeout(() => {\n      setShowDropdown(false);\n    }, 200); // Add a small delay to allow clicking on the dropdown\n  };\n\n  return (\n    <div className=\"game-search\">\n      <h2>Game Search</h2>\n      <Form>\n        <Form.Group controlId=\"searchTerm\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search for a game\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onFocus={() => setShowDropdown(true)}\n            onBlur={handleInputBlur}\n            ref={searchInputRef}\n          />\n        </Form.Group>\n      </Form>\n      {showDropdown && (\n        <div className=\"search-dropdown\">\n          <ListGroup>\n            {searchResults.map((game) => (\n              <ListGroup.Item key={game.id} onClick={() => handleItemClick(game)}>\n                {game.name}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameSearch;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}