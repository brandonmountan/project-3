{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\Header.js\";\nimport React from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { loadStripe } from \"@stripe/stripe-js\";\nimport { useMutation } from \"@apollo/client\";\nimport { DONATE } from \"../utils/mutations\";\nimport { useState } from \"react\";\nimport styles from \"./header.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport DonateComponent from \"./Donate\";\n\n// const stripePromise = await loadStripe(process.env.REACT_APP_CLIENT_STRIPE_KEY);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-4 ${styles.headerContainer}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `text-center ${styles.headerText}`,\n      children: [\"PostGame \", /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.donate,\n      children: /*#__PURE__*/_jsxDEV(DonateComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n_c = Header;\nexport default Header;\n\n// const [donate] = useMutation(DONATE);\n// const [donationAmount, setDonationAmount] = useState(0);\n\n// const handleDonate = async (amount) => {\n//   try {\n//     const { data } = await donate({ variables: { amount: donationAmount } });\n//     const stripe = await stripePromise;\n//     const { session } = data.donate;\n//     const result = await stripe.redirectToCheckout({ sessionId: session });\n//     if (result.error) {\n//       console.error(result.error.message);\n//     }\n//   } catch (error) {\n//     console.error(error);\n//   }\n// };\n\n//   return (\n//     <div className={`p-4 ${styles.headerContainer}`}>\n//       <div className={styles.leftSide}></div>\n//       <h1 className={`text-center ${styles.headerText}`}>\n//         PostGame <Badge bg=\"secondary\">Welcome!</Badge>\n//       </h1>\n//       <div className={styles.donate}>\n//         <h2>Donate</h2>\n//         <InputGroup\n//           type=\"number\"\n//           value={donationAmount}\n//           onChange={(e) => setDonationAmount(parseFloat(e.target.value))}\n//           min=\"1\"\n//           step=\"1\"\n//         >\n//           <Form.Control />\n//           <InputGroup.Text>$</InputGroup.Text>\n//         </InputGroup>\n//         <Button onClick={handleDonate} variant=\"light\">\n//           Submit\n//         </Button>{\" \"}\n//       </div>\n//     </div>\n//   );\n// }\n\n// return (\n//   <div className={`p-4 ${styles.headerContainer}`}>\n//     <div className={styles.leftSide}></div>\n//     <h1 className={`text-center ${styles.headerText}`}>\n//       PostGame <Badge bg=\"secondary\">Welcome!</Badge>\n//     </h1>\n//     <div className={styles.donate}>\n//       <h2>Donate</h2>\n//       <InputGroup>\n//         <InputGroup.Text>$</InputGroup.Text>\n//         <Form.Control\n//           type=\"number\"\n//           value={donationAmount}\n//           onChange={(e) => setDonationAmount(parseFloat(e.target.value))}\n//           min=\"1\"\n//           step=\"1\"\n//         />\n//         <Button onClick={handleDonate} variant=\"light\">\n//           Submit\n//         </Button>\n//       </InputGroup>\n//     </div>\n//   </div>\n// );\n// }\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Badge","useMutation","DONATE","useState","styles","Button","Form","InputGroup","DonateComponent","jsxDEV","_jsxDEV","Header","className","headerContainer","children","leftSide","fileName","_jsxFileName","lineNumber","columnNumber","headerText","bg","donate","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/Header.js"],"sourcesContent":["import React from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { loadStripe } from \"@stripe/stripe-js\";\nimport { useMutation } from \"@apollo/client\";\nimport { DONATE } from \"../utils/mutations\";\nimport { useState } from \"react\";\nimport styles from \"./header.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport DonateComponent from \"./Donate\";\n\n// const stripePromise = await loadStripe(process.env.REACT_APP_CLIENT_STRIPE_KEY);\n\nfunction Header() {\n\n\nreturn (\n  <div className={`p-4 ${styles.headerContainer}`}>\n    <div className={styles.leftSide}></div>\n    <h1 className={`text-center ${styles.headerText}`}>\n      PostGame <Badge bg=\"secondary\">Welcome!</Badge>\n    </h1>\n    <div className={styles.donate}>\n      {/* <h2>Check</h2> */}\n      <DonateComponent />\n    </div>\n  </div>\n);\n}\n\n\nexport default Header;\n\n\n\n\n  // const [donate] = useMutation(DONATE);\n  // const [donationAmount, setDonationAmount] = useState(0);\n\n  // const handleDonate = async (amount) => {\n  //   try {\n  //     const { data } = await donate({ variables: { amount: donationAmount } });\n  //     const stripe = await stripePromise;\n  //     const { session } = data.donate;\n  //     const result = await stripe.redirectToCheckout({ sessionId: session });\n  //     if (result.error) {\n  //       console.error(result.error.message);\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n\n//   return (\n//     <div className={`p-4 ${styles.headerContainer}`}>\n//       <div className={styles.leftSide}></div>\n//       <h1 className={`text-center ${styles.headerText}`}>\n//         PostGame <Badge bg=\"secondary\">Welcome!</Badge>\n//       </h1>\n//       <div className={styles.donate}>\n//         <h2>Donate</h2>\n//         <InputGroup\n//           type=\"number\"\n//           value={donationAmount}\n//           onChange={(e) => setDonationAmount(parseFloat(e.target.value))}\n//           min=\"1\"\n//           step=\"1\"\n//         >\n//           <Form.Control />\n//           <InputGroup.Text>$</InputGroup.Text>\n//         </InputGroup>\n//         <Button onClick={handleDonate} variant=\"light\">\n//           Submit\n//         </Button>{\" \"}\n//       </div>\n//     </div>\n//   );\n// }\n\n// return (\n//   <div className={`p-4 ${styles.headerContainer}`}>\n//     <div className={styles.leftSide}></div>\n//     <h1 className={`text-center ${styles.headerText}`}>\n//       PostGame <Badge bg=\"secondary\">Welcome!</Badge>\n//     </h1>\n//     <div className={styles.donate}>\n//       <h2>Donate</h2>\n//       <InputGroup>\n//         <InputGroup.Text>$</InputGroup.Text>\n//         <Form.Control\n//           type=\"number\"\n//           value={donationAmount}\n//           onChange={(e) => setDonationAmount(parseFloat(e.target.value))}\n//           min=\"1\"\n//           step=\"1\"\n//         />\n//         <Button onClick={handleDonate} variant=\"light\">\n//           Submit\n//         </Button>\n//       </InputGroup>\n//     </div>\n//   </div>\n// );\n// }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAO,sCAAsC;AAC7C;AACA,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,eAAe,MAAM,UAAU;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,MAAMA,CAAA,EAAG;EAGlB,oBACED,OAAA;IAAKE,SAAS,EAAG,OAAMR,MAAM,CAACS,eAAgB,EAAE;IAAAC,QAAA,gBAC9CJ,OAAA;MAAKE,SAAS,EAAER,MAAM,CAACW;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvCT,OAAA;MAAIE,SAAS,EAAG,eAAcR,MAAM,CAACgB,UAAW,EAAE;MAAAN,QAAA,GAAC,WACxC,eAAAJ,OAAA,CAACV,KAAK;QAACqB,EAAE,EAAC,WAAW;QAAAP,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACLT,OAAA;MAAKE,SAAS,EAAER,MAAM,CAACkB,MAAO;MAAAR,QAAA,eAE5BJ,OAAA,CAACF,eAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER;AAACI,EAAA,GAfQZ,MAAM;AAkBf,eAAeA,MAAM;;AAKnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}