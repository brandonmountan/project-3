{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\pages\\\\GameCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameCard({\n  game\n}) {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const filteredScreenshots = game.short_screenshots.filter(screenshot => screenshot.id !== -1);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      src: game.background_image,\n      alt: game.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Release Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \" \", game.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Platforms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \" \", game.platforms.map(platform => platform.platform.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Metacritic Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" \", game.metacritic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: filteredScreenshots.map(screenshot => /*#__PURE__*/_jsxDEV(Image, {\n        src: screenshot.image,\n        alt: game.name,\n        thumbnail: true\n      }, screenshot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(GameCard, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = GameCard;\nGameCard.propTypes = {\n  game: PropTypes.object.isRequired\n};\nexport default GameCard;\nvar _c;\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"names":["React","PropTypes","Card","Image","jsxDEV","_jsxDEV","GameCard","game","_s","selectedImage","setSelectedImage","useState","filteredScreenshots","short_screenshots","filter","screenshot","id","children","Img","src","background_image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","released","platforms","map","platform","join","metacritic","Footer","image","thumbnail","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/pages/GameCard.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nfunction GameCard({ game }) {\r\n\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const filteredScreenshots = game.short_screenshots.filter(\r\n    (screenshot) => screenshot.id !== -1\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Img src={game.background_image} alt={game.name} />\r\n      <Card.Body>\r\n        <Card.Title>{game.name}</Card.Title>\r\n        <Card.Text>\r\n          <strong>Release Date:</strong> {game.released}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Platforms:</strong>{\" \"}\r\n          {game.platforms.map((platform) => platform.platform.name).join(\", \")}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Metacritic Score:</strong> {game.metacritic}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n      {filteredScreenshots.map((screenshot) => (\r\n          <Image\r\n            key={screenshot.id}\r\n            src={screenshot.image}\r\n            alt={game.name}\r\n            thumbnail\r\n          />\r\n        ))}\r\n        {/* image gallery can be added here */}\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nGameCard.propTypes = {\r\n  game: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default GameCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}