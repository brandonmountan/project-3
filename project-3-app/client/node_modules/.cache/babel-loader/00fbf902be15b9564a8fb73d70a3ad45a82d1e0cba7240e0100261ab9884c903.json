{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\pages\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from 'react-bootstrap/Button';\nimport { useMutation } from \"@apollo/client\";\n// import { useParams } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { ADD_POST } from \"../utils/mutations\";\nimport { QUERY_POSTS, QUERY_ME } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [postText, setPostText] = useState('');\n\n  // const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, {\n    error\n  }] = useMutation(ADD_POST, {\n    update(cache, {\n      data: {\n        addPost\n      }\n    }) {\n      try {\n        const {\n          posts\n        } = cache.readQuery({\n          query: QUERY_POSTS\n        });\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: {\n            posts: [addPost, ...posts]\n          }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n      const {\n        me\n      } = cache.readQuery({\n        query: QUERY_ME\n      });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: {\n          me: {\n            ...me,\n            posts: [...me.posts, addPost]\n          }\n        }\n      });\n    }\n  });\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data\n      } = await addPost({\n        variables: {\n          postText,\n          postAuthor: Auth.getProfile().data.username\n        }\n      });\n      setPostText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      // setCharacterCount(value.length)\n    }\n  };\n  // const { postId } = useParams();\n\n  // const { loading, data } = useMutation(ADD_POST, {\n  //   // pass URL parameter\n  //   variables: { postId: postId },\n  // });\n\n  // const post = data?.post || {};\n\n  // if (loading) {\n  //   return <div>Loading...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlTextarea1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Post Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        onChange: handleChange,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      as: \"input\",\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"hFv8W5YoihP/DM1v9UH4rjJh1A0=\", false, function () {\n  return [useMutation];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","Form","Button","useMutation","Auth","ADD_POST","QUERY_POSTS","QUERY_ME","jsxDEV","_jsxDEV","PostForm","_s","postText","setPostText","addPost","error","update","cache","data","posts","readQuery","query","writeQuery","e","console","me","handleFormSubmit","event","preventDefault","variables","postAuthor","getProfile","username","err","handleChange","name","value","target","length","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","onChange","rows","type","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/pages/PostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from 'react-bootstrap/Button';\nimport { useMutation } from \"@apollo/client\";\n// import { useParams } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { ADD_POST } from \"../utils/mutations\";\nimport { QUERY_POSTS, QUERY_ME } from '../utils/queries';\n\nconst PostForm = () => {\n  const [postText, setPostText] = useState('');\n\n  // const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update( cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [ addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e)\n      }\n\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, posts: [...me.posts, addPost] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setPostText('')\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    \n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      // setCharacterCount(value.length)\n    }\n  }\n  // const { postId } = useParams();\n\n  // const { loading, data } = useMutation(ADD_POST, {\n  //   // pass URL parameter\n  //   variables: { postId: postId },\n  // });\n\n  // const post = data?.post || {};\n\n  // if (loading) {\n  //   return <div>Loading...</div>;\n  // }\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Post Here</Form.Label>\n        <Form.Control as=\"textarea\" onChange={handleChange} rows={3} />\n      </Form.Group>\n      <Button as=\"input\" type=\"submit\" value=\"Submit\" />{' '}\n    </Form>\n  );\n}\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}