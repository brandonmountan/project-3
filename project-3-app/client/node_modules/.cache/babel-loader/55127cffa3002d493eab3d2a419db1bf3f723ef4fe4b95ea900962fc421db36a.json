{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\nexport { hasOwnProperty };\nexport var arrayFromSet = Array.from || function (set) {\n  var array = [];\n  set.forEach(function (item) {\n    return array.push(item);\n  });\n  return array;\n};\nexport function maybeUnsubscribe(entryOrDep) {\n  var unsubscribe = entryOrDep.unsubscribe;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}","map":{"version":3,"names":["hasOwnProperty","Object","prototype","arrayFromSet","Array","from","set","array","forEach","item","push","maybeUnsubscribe","entryOrDep","unsubscribe"],"sources":["C:\\Users\\Daniel\\bootcamp\\project-3\\project-3-app\\client\\node_modules\\optimism\\src\\helpers.ts"],"sourcesContent":["export const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const arrayFromSet: <T>(set: Set<T>) => T[] =\n  Array.from ||\n  function (set) {\n    const array: any[] = [];\n    set.forEach(item => array.push(item));\n    return array;\n  };\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n"],"mappings":"AAAO,IACLA,cAAc,GACZC,MAAM,CAACC,SAAS,CADlBF,cAAc;AACK,SAAAA,cAAA;AAErB,OAAO,IAAMG,YAAY,GACvBC,KAAK,CAACC,IAAI,IACV,UAAUC,GAAG;EACX,IAAMC,KAAK,GAAU,EAAE;EACvBD,GAAG,CAACE,OAAO,CAAC,UAAAC,IAAI;IAAA,OAAIF,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;EAAA,EAAC;EACrC,OAAOF,KAAK;AACd,CAAC;AAMH,OAAM,SAAUI,gBAAgBA,CAACC,UAA0B;EACzD,IAAQC,WAAW,GAAKD,UAAU,CAA1BC,WAAW;EACnB,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;IACrCD,UAAU,CAACC,WAAW,GAAG,KAAK,CAAC;IAC/BA,WAAW,EAAE;;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}