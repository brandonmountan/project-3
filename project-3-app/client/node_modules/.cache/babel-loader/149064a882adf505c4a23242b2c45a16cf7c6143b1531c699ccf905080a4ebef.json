{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\project-3\\\\project-3-app\\\\client\\\\src\\\\components\\\\pages\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport GameCard from \"./GameCard\";\nimport \"../../styles/gamePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(null); // Store selected game data\n\n  useEffect(() => {\n    // Fetch game suggestions when the search term changes\n    async function fetchGameSuggestions() {\n      try {\n        if (searchTerm.trim() === \"\") {\n          setSearchResults([]); // Clear results if the search term is empty\n          return;\n        }\n        const response = await axios.get(\"https://api.rawg.io/api/games\", {\n          params: {\n            key: process.env.REACT_APP_RAWG_API_KEY,\n            search: searchTerm,\n            page_size: 10 // Limit the number of results\n          }\n        });\n\n        setSearchResults(response.data.results);\n      } catch (error) {\n        console.error(\"Error fetching game suggestions\", error);\n      }\n    }\n    fetchGameSuggestions();\n  }, [searchTerm]);\n  const handleItemClick = clickedItem => {\n    setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n    setSearchResults([]); // Clear the dropdown\n    setSelectedGame(clickedItem); // Store the selected game data\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"searchTerm\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search for a game\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          onFocus: () => {\n            if (searchTerm.trim() !== \"\") {\n              // Only show the dropdown if there is text in the input field\n              setSearchResults([]);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), formSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Displaying results for: \", displayedResultsFor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: searchResults.map(game => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => handleItemClick(game),\n        children: game.name\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), selectedGame && /*#__PURE__*/_jsxDEV(GameCard, {\n      game: selectedGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"AHDbgZHw042RBfKC5TFYOA09wFo=\");\n_c = GamePage;\nexport default GameSearch;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","ListGroup","GameCard","jsxDEV","_jsxDEV","GamePage","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","selectedGame","setSelectedGame","fetchGameSuggestions","trim","response","get","params","key","process","env","REACT_APP_RAWG_API_KEY","search","page_size","data","results","error","console","handleItemClick","clickedItem","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","Group","controlId","Control","type","placeholder","value","onChange","target","onFocus","formSubmitted","displayedResultsFor","length","map","game","Item","onClick","id","_c","GameSearch","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/pages/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport GameCard from \"./GameCard\";\nimport \"../../styles/gamePage.css\";\n\nfunction GamePage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(null); // Store selected game data\n\n  useEffect(() => {\n    // Fetch game suggestions when the search term changes\n    async function fetchGameSuggestions() {\n      try {\n        if (searchTerm.trim() === \"\") {\n          setSearchResults([]); // Clear results if the search term is empty\n          return;\n        }\n\n        const response = await axios.get(\n          \"https://api.rawg.io/api/games\",\n          {\n            params: {\n              key: process.env.REACT_APP_RAWG_API_KEY,\n              search: searchTerm,\n              page_size: 10, // Limit the number of results\n            },\n          }\n        );\n\n        setSearchResults(response.data.results);\n      } catch (error) {\n        console.error(\"Error fetching game suggestions\", error);\n      }\n    }\n\n    fetchGameSuggestions();\n  }, [searchTerm]);\n\n  const handleItemClick = (clickedItem) => {\n    setSearchTerm(clickedItem.name); // Set the input value to the clicked item's name\n    setSearchResults([]); // Clear the dropdown\n    setSelectedGame(clickedItem); // Store the selected game data\n  };\n\n  return (\n    <div className=\"game-search\">\n      <h2>Game Search</h2>\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <Form.Group controlId=\"searchTerm\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search for a game\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onFocus={() => {\n              if (searchTerm.trim() !== \"\") {\n                // Only show the dropdown if there is text in the input field\n                setSearchResults([]);\n              }\n            }}\n          />\n        </Form.Group>\n      </Form>\n      {formSubmitted && (\n        <p>Displaying results for: {displayedResultsFor}</p>\n      )}\n      {searchResults.length > 0 && (\n        <ListGroup>\n          {searchResults.map((game) => (\n            <ListGroup.Item\n              key={game.id}\n              onClick={() => handleItemClick(game)}\n            >\n              {game.name}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      )}\n      {selectedGame && <GameCard game={selectedGame} />} {/* Render the GameCard component */}\n    </div>\n  );\n}\n\nexport default GameSearch;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}