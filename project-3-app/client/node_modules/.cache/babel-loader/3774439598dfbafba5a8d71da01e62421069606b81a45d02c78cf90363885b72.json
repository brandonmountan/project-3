{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const LOGIN = gql`\nmutation login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $email: String!, $password: String!) {\n  addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\nexport const ADD_POST = gql`\nmutation addPost($postTitle: String!, $postText: String!, $postAuthor: ID!) {\n  addPost(postTitle: $postTitle, postText: $postText, postAuthor: $postAuthor) {\n    postAuthor {\n      _id\n      username\n    }\n    postTitle\n    postText\n    createdAt\n  }\n}\n`;\nexport const UPDATE_POST = gql`\nmutation updatePost($postId: ID!, $postTitle: String!, $postText: String!) {\n  updatePost(postId: $postId, postTitle: $postTitle, postText: $postText) {\n    _id\n    postText\n    postTitle\n  }\n}\n`;\nexport const ADD_COMMENT = gql`\n  mutation addComment($postId: ID!, $commentText: String!) {\n    addComment(postId: $postId, commentText: $commentText) {\n      _id\n      postTitle\n      postText\n      postAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;","map":{"version":3,"names":["gql","LOGIN","ADD_USER","ADD_POST","UPDATE_POST","ADD_COMMENT"],"sources":["C:/Users/Daniel/bootcamp/project-3/project-3-app/client/src/components/utils/mutations.js"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\nmutation login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $email: String!, $password: String!) {\n  addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_POST = gql`\nmutation addPost($postTitle: String!, $postText: String!, $postAuthor: ID!) {\n  addPost(postTitle: $postTitle, postText: $postText, postAuthor: $postAuthor) {\n    postAuthor {\n      _id\n      username\n    }\n    postTitle\n    postText\n    createdAt\n  }\n}\n`;\n\nexport const UPDATE_POST = gql`\nmutation updatePost($postId: ID!, $postTitle: String!, $postText: String!) {\n  updatePost(postId: $postId, postTitle: $postTitle, postText: $postText) {\n    _id\n    postText\n    postTitle\n  }\n}\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($postId: ID!, $commentText: String!) {\n    addComment(postId: $postId, commentText: $commentText) {\n      _id\n      postTitle\n      postText\n      postAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,KAAK,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMK,WAAW,GAAGL,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}